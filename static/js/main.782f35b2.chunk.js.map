{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","redux/contact/contact-types.js","redux/contact/contact-action.js","redux/contact/contact-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContacts","createAction","types","contactFormState","payload","id","uuidv4","name","number","deleteContacts","chengeFilter","items","createReducer","action","state","find","alert","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReduser","devTools","process","persistor","persistStore","ContactForm","handleChenge","event","currentTarget","value","setState","reset","hendleSubmit","preventDefault","props","this","className","styles","contactForm","onSubmit","label","input","onChange","type","pattern","title","required","labelNumber","button","Component","connect","dispatch","contactsAction","onHandlerChenge","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","list","map","item","textName","textNamber","onClick","App","container","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.782f35b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1mJwK\",\"input\":\"Filter_input__2BTbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__7x_O3\"};","export default {\r\n  ADD: 'Contact/addition',\r\n  DELETE: 'Contact/deletion',\r\n  CHENGE_FILTER: 'Contact/filter',\r\n};","import types from './contact-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContacts = createAction(types.ADD, contactFormState => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name: contactFormState.name,\r\n      number: contactFormState.number,\r\n    },\r\n  };\r\n});\r\nconst deleteContacts = createAction(types.DELETE);\r\nconst chengeFilter = createAction(types.CHENGE_FILTER);\r\n\r\nexport default { addContacts, deleteContacts, chengeFilter };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport action from './contact-action';\r\n\r\nconst items = createReducer([], {\r\n  [action.addContacts]: (state, { payload }) =>\r\n    state.find(({ name }) => name === payload.name)\r\n      ? alert(`${state.name} is already in contacts`)\r\n      : [payload, ...state],\r\n  [action.deleteContacts]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [action.chengeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactReduser from './contact/contact-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReduser),\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/contact/contact-action';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChenge = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  hendleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.addContacts(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.hendleSubmit}>\r\n        <label className={styles.label}>Name</label>\r\n        <input\r\n          className={styles.input}\r\n          value={name}\r\n          onChange={this.handleChenge}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label className={styles.labelNumber}>Number</label>\r\n        <input\r\n          className={styles.input}\r\n          value={number}\r\n          onChange={this.handleChenge}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContacts: contactForm => dispatch(contactsAction.addContacts(contactForm)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/contact/contact-action';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onHandlerChenge }) => {\r\n  return (\r\n    <div>\r\n      <h3 className={styles.title}>Find contact by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        className={styles.input}\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onHandlerChenge}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onHandleChenge: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onHandlerChenge: event =>\r\n    dispatch(contactsAction.chengeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/contact/contact-action';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContacts }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <span className={styles.textName}>{name}:</span>\r\n          <span className={styles.textNamber}>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.button}\r\n            onClick={() => deleteContacts(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  deleteContacts: PropTypes.func,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContacts: id => dispatch(contactsAction.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__tdy3I\",\"label\":\"ContactForm_label__1y8O8\",\"input\":\"ContactForm_input__1gYds\",\"button\":\"ContactForm_button__1rusK\",\"labelNumber\":\"ContactForm_labelNumber__3DTvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__ut3S4\",\"item\":\"ContactList_item__2ALDy\",\"textName\":\"ContactList_textName__1VI5E\",\"textNumber\":\"ContactList_textNumber__8EL-W\",\"button\":\"ContactList_button__37rQ0\"};"],"sourceRoot":""}